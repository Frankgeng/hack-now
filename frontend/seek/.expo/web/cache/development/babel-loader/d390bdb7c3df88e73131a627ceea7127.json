{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction _createForOfIteratorHelperLoose(o) { var i = 0; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } i = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return i.next.bind(i); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport * as firebase from \"firebase\";\nimport axios from \"axios\";\nimport Geolocation from \"@react-native-community/geolocation\";\n\nvar stringSimilarity = require(\"string-similarity\");\n\nvar Items = function () {\n  function Items() {\n    _classCallCheck(this, Items);\n\n    var firebaseConfig = {\n      apiKey: \"AIzaSyDZPaKcPaC0xnoxM1qYsUPEbuON1krqlP4\",\n      authDomain: \"seek-525ee.firebaseapp.com\",\n      databaseURL: \"https://seek-525ee.firebaseio.com\",\n      projectId: \"seek-525ee\",\n      storageBucket: \"seek-525ee.appspot.com\",\n      messagingSenderId: \"803806872501\",\n      appId: \"1:803806872501:web:ce8936ff30475b2bed4ffc\",\n      measurementId: \"G-2FWD6N6E9V\"\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n      firebase.analytics();\n    }\n\n    this.db = firebase.firestore();\n  }\n\n  _createClass(Items, [{\n    key: \"loadAllMatch\",\n    value: function loadAllMatch(name) {\n      var snapshot, data_arr, all_item_names, result_arr, best_matches, _iterator, _step, match;\n\n      return _regeneratorRuntime.async(function loadAllMatch$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.db.collection(\"items\").get());\n\n            case 2:\n              snapshot = _context.sent;\n              Geolocation.getCurrentPosition(function (info) {\n                axios.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + info.coords.latitude + \",\" + info.coords.longitude + \"&key=AIzaSyDUAgs6Oz0iTMoHUzxuv95F4yN4ehY2xrc\").then(function (result) {\n                  var words = result.data.results[0].address_components;\n                  var postcode = words[words.length - 1].long_name;\n                });\n              });\n              data_arr = {};\n              snapshot.docs.map(function (doc) {\n                data_arr[doc.id] = Object.values(doc.data());\n              });\n              all_item_names = Object.keys(data_arr);\n              result_arr = [];\n              best_matches = this.findKBestMatches(name, all_item_names, 3);\n              console.log(best_matches);\n\n              for (_iterator = _createForOfIteratorHelperLoose(best_matches); !(_step = _iterator()).done;) {\n                match = _step.value;\n                result_arr = result_arr.concat(data_arr[match]);\n              }\n\n              console.log(result_arr);\n              return _context.abrupt(\"return\", result_arr);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"findKBestMatches\",\n    value: function findKBestMatches(target, source) {\n      var num_matches = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var result = [];\n      var source_set = new Set(source);\n\n      for (var i = 0; i < num_matches; i++) {\n        var best_match = stringSimilarity.findBestMatch(target, Array.from(source_set));\n        result.push(best_match.bestMatch.target);\n        source_set.delete(best_match.bestMatch.target);\n      }\n\n      return result;\n    }\n  }]);\n\n  return Items;\n}();\n\nexport { Items };","map":{"version":3,"sources":["/Users/bryanyuan1/Desktop/hack-now/frontend/seek/back_utils/Items.js"],"names":["firebase","axios","Geolocation","stringSimilarity","require","Items","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","analytics","db","firestore","name","collection","get","snapshot","getCurrentPosition","info","coords","latitude","longitude","then","result","words","data","results","address_components","postcode","long_name","data_arr","docs","map","doc","id","Object","values","all_item_names","keys","result_arr","best_matches","findKBestMatches","console","log","match","concat","target","source","num_matches","source_set","Set","i","best_match","findBestMatch","Array","from","push","bestMatch","delete"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase\";\nimport axios from \"axios\";\nimport Geolocation from \"@react-native-community/geolocation\";\nconst stringSimilarity = require(\"string-similarity\");\n\nclass Items {\n  constructor() {\n    // Your web app's Firebase configuration\n    var firebaseConfig = {\n      apiKey: \"AIzaSyDZPaKcPaC0xnoxM1qYsUPEbuON1krqlP4\",\n      authDomain: \"seek-525ee.firebaseapp.com\",\n      databaseURL: \"https://seek-525ee.firebaseio.com\",\n      projectId: \"seek-525ee\",\n      storageBucket: \"seek-525ee.appspot.com\",\n      messagingSenderId: \"803806872501\",\n      appId: \"1:803806872501:web:ce8936ff30475b2bed4ffc\",\n      measurementId: \"G-2FWD6N6E9V\"\n    };\n    if (!firebase.apps.length) {\n      // Initialize Firebase\n      firebase.initializeApp(firebaseConfig);\n      firebase.analytics();\n    }\n    // fire store\n    this.db = firebase.firestore();\n  }\n\n  async loadAllMatch(name) {\n    const snapshot = await this.db.collection(\"items\").get();\n    Geolocation.getCurrentPosition((info) => {\n      axios\n        .get(\n          `https://maps.googleapis.com/maps/api/geocode/json?latlng=${info.coords.latitude},${info.coords.longitude}&key=AIzaSyDUAgs6Oz0iTMoHUzxuv95F4yN4ehY2xrc`\n        )\n        .then((result) => {\n          let words = result.data.results[0].address_components;\n          let postcode = words[words.length - 1].long_name;\n        });\n    });\n    let data_arr = {};\n    snapshot.docs.map((doc) => {\n      data_arr[doc.id] = Object.values(doc.data());\n    });\n    let all_item_names = Object.keys(data_arr);\n\n    let result_arr = [];\n    let best_matches = this.findKBestMatches(name, all_item_names, 3);\n    console.log(best_matches);\n    for (let match of best_matches) {\n      result_arr = result_arr.concat(data_arr[match]);\n    }\n    console.log(result_arr);\n    return result_arr;\n  }\n\n  findKBestMatches(target, source, num_matches = 1) {\n    let result = [];\n    let source_set = new Set(source);\n\n    for (let i = 0; i < num_matches; i++) {\n      let best_match = stringSimilarity.findBestMatch(\n        target,\n        Array.from(source_set)\n      );\n      result.push(best_match.bestMatch.target);\n      source_set.delete(best_match.bestMatch.target);\n    }\n\n    return result;\n  }\n}\n\nexport { Items };\n"]},"metadata":{},"sourceType":"module"}